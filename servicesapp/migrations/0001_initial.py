# Generated by Django 5.1.1 on 2025-05-07 16:46

import django.core.validators
import django.db.models.deletion
import servicesapp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('otp_code', models.CharField(max_length=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='WorkerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True,
                                           serialize=False,
                                           verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('work_type', models.CharField(choices=[(
                    'daily_helpers', 'Daily Helpers'),
                    ('cooking_cleaning', 'Cooking and Cleaning'),
                    ('drivers', 'Drivers'), ('playzone', 'PlayZone'),
                    ('care', 'Child and Adults Care'), ('petcare', 'PetCare'),
                    ('beauty_salon', 'Beauty and Salon'),
                    ('electrician', 'Electrician and AC Services'),
                    ('tutors', 'Tutors'), ('nursing', 'Nursing'),
                    ('plumber', 'Plumber'),
                    ('decorators', 'Function and Home Decorators')],
                    max_length=50)),
                ('years_of_experience', models.PositiveIntegerField(
                    blank=True, null=True)),
                ('experience_country', models.CharField(
                    blank=True, choices=[
                        ('india', 'India'),
                        ('usa', 'USA'),
                        ('singapore', 'Singapore'),
                        ('uk', 'UK'), ('uae', 'UAE'),
                        ('canada', 'Canada'), ('australia', 'Australia')], max_length=50, null=True)),
                ('specialization', models.CharField(blank=True,
                                                    max_length=255,
                                                    null=True)),
                ('education', models.CharField(blank=True, choices=[
                    ('high_school', 'High School'), ('diploma', 'Diploma'),
                    ('btech', 'B.Tech'), ('be', 'B.E'), ('bsc', 'B.Sc'),
                    ('ba', 'B.A'), ('bcom', 'B.Com'), ('mtech', 'M.Tech'),
                    ('msc', 'M.Sc'), ('ma', 'M.A'), ('mcom', 'M.Com'),
                    ('mba', 'MBA'), ('pg_diploma', 'PG Diploma'),
                    ('phd', 'PhD'), ('other', 'Other')],
                    max_length=50, null=True)),
                ('photo', models.ImageField(
                    blank=True, null=True,
                    upload_to=servicesapp.models.worker_photo_path,
                    validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('document_type', models.CharField(
                    blank=True, choices=[('aadhar', 'Aadhar Card'),
                                         ('pan', 'PAN Card'),
                                         ('degree', 'Degree Certificate'),
                                         ('other_cert', 'Other Certification'),
                                         ('cv', 'CV/Resume'),
                                         ('id_proof', 'ID Proof'),
                                         ('teaching_cert', 'Teaching Certification'),
                                         ('medical_cert', 'Medical Certification')], max_length=50, null=True)),
                ('document_file', models.FileField(
                    blank=True, null=True,
                    upload_to=servicesapp.models.worker_document_path,
                    validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])])),
                ('certification_file', models.FileField(
                    blank=True, null=True,
                    upload_to=servicesapp.models.worker_certification_path,
                    validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetOTP',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('otp', models.CharField(max_length=4)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RechargeTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('amount', models.DecimalField(
                    decimal_places=2, max_digits=10)),
                ('razorpay_order_id', models.CharField(max_length=100)),
                ('razorpay_payment_id', models.CharField(
                    blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(
                    blank=True, max_length=100, null=True)),
                ('payment_method', models.CharField(
                    choices=[('Card', 'Card'), ('UPI', 'UPI'),
                             ('Wallet', 'Wallet')], max_length=50)),
                ('status', models.CharField(
                    choices=[('Pending', 'Pending'),
                             ('Completed', 'Completed'),
                             ('Failed', 'Failed')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('user', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE,
                    to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('service', models.CharField(max_length=100)),
                ('status', models.CharField(
                    choices=[('pending', 'Pending'), ('accepted', 'Accepted'),
                             ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_by', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    to=settings.AUTH_USER_MODEL)),
                ('service_provider', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    to='servicesapp.serviceprovider')),
            ],
        ),
    ]
